%h1 Create an event
= form_with(model: @event, url: team_events_path(@team), html: { data: { controller: 'event-form slug-form', 'event-form-type-value': 'new' } }) do |f|
  - if @event.errors.any?
    - @event.errors.full_messages.each do |msg|
      .alert.alert-danger
        = msg
  .form-floating.mb-3
    = f.text_field :name, required: true, class: 'form-control', placeholder: 'Name', data: { action: 'slug-form#prefillSlug' }
    = f.label :name, 'Name'
  .form-floating.mb-3
    = f.text_field :slug, required: true, class: 'form-control', placeholder: 'Event id', pattern: '^[a-z0-9_]+$', data: { 'slug-form-target': 'slug' }
    = f.label :slug, 'Event id'
  .form-floating.mb-3
    = f.text_area :description, size: "70x5", class: 'form-control h-auto', placeholder: 'Description'
    = f.label :description, 'Description'
  .form-floating.mb-3
    = f.text_field :meeting_url, class: 'form-control', placeholder: 'Meeting link'
    = f.label :meeting_url, 'Meeting link'
  .input-group.mb-3
    .form-floating
      = f.datetime_local_field :starts_at, required: true, class: 'form-control', data: { action: 'event-form#date', 'event-form-target': 'startsAt' }
      = f.label :starts_at, 'Starts At'
    .form-floating
      = f.datetime_local_field :ends_at, required: true, class: 'form-control'
      = f.label :ends_at, 'Ends At'
    .form-floating
      = f.time_zone_select :timezone, nil, { include_blank: false }, class: 'form-select', data: { 'event-form-target': 'timezone' }
      = f.label :timezone, 'Timezone'
  .mb-3
    = f.fields_for :schedule_recurrences, ScheduleRecurrence.new do |fr|
      %div{ data: { controller: 'recurrence-form' } }
        .form-check
          = fr.radio_button :_destroy, 'true', checked: true, class: 'form-check-input', data: { action: 'recurrence-form#recurrence', 'recurrence-form-target': 'repeat' }
          = fr.label :_destroy_true, 'Once', class: 'form-check-label'
        .row.g-1.mb-3.align-items-center
          .col-auto
            .form-check
              = fr.radio_button :_destroy, 'false', checked: false, class: 'form-check-input', data: { action: 'recurrence-form#recurrence' }
              = fr.label :_destroy_false, 'Repeat every', class: 'form-check-label'
          .col-auto
            = fr.number_field :interval, value: 1, class: 'form-control', data: { 'recurrence-form-target': 'interval' }
          .col-auto
            = fr.select :frequency, ScheduleRecurrence.frequencies.keys.to_h { |r| [r.pluralize, r] }, {}, class: 'form-select', data: { action: 'recurrence-form#recurrence', 'recurrence-form-target': 'frequency' }
        .input-group.mb-3.d-none{ data: { 'event-form-target': 'week', 'recurrence-form-target': 'week' } }
          = fr.collection_check_boxes :week_days, Date::DAYNAMES.each_with_index.to_a, :second, :first, include_hidden: false do |c|
            .form-check.me-2
              = c.check_box class: 'form-check-input'
              = c.label class: 'form-check-label'
        .form-floating.mb-3.d-none{ data: { 'event-form-target': 'month', 'recurrence-form-target': 'month' } }
          = fr.select :month_type, ScheduleRecurrence.month_types.keys.to_h { |r| [r.humanize, r] }, {}, class: 'form-control'
          = fr.label :month_type, 'Repeat on'
        .form-floating.d-none{ data: { 'recurrence-form-target': 'recurrenceEndsAt' } }
          = fr.datetime_local_field :ends_at, class: 'form-control'
          = fr.label :ends_at, 'Do not repeat after'
  = f.submit 'Create', class: 'btn btn-primary'
