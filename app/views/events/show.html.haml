.row
  .col-md-8.mb-5
    %h1.d-flex.justify-content-between.text-break.flex-wrap
      = @event.name
      %span.buttons.ms-2.text-end
        = render partial: 'shared/subscribe_links', locals: { url: team_event_url(@team, @event, format: :ics),
                                                              button_class: 'btn btn-secondary' }
        - if user_signed_in?
          = link_to(t('events.alarms'), team_event_alarms_path(@team, @event),
                    class: 'btn btn-secondary')
        - if policy(@event).update?
          = link_to(t('events.edit'), edit_team_event_path(@team, @event),
                    class: 'btn btn-secondary')
        - if policy(@event).destroy?
          = button_to t('events.remove'), team_event_path(@team, @event), method: :delete,
                                                                          form: { class: 'd-inline' },
                                                                          class: 'btn btn-danger'
    - if @event.description.present?
      .row.g-2.mb-2
        .col-auto
          %i.fas.fa-fw.fa-align-left
        .col
          = markdownify(@event.description)
    - if @event.meeting_url.present?
      .row.g-2.mb-2
        .col-auto
          %i.fas.fa-fw.fa-video
        .col
          = link_to @event.meeting_url, @event.meeting_url
    .row.g-2.mb-2
      .col-auto
        %i.fas.fa-fw.fa-user-group
      .col
        = t('events.run_by_html', team: link_to(@event.team.name, team_path(@event.team)))
    .row.g-2.mb-2
      .col-auto
        %i.fas.fa-fw.fa-clock
      .col
        %div= local_time(@event.starts_at, :long)
        %div= local_time(@event.ends_at, :long)
    - if @event.schedule_recurrences.present?
      .row.g-2.mb-2
        .col-auto
          %i.fas.fa-fw.fa-rotate-right
        .col
          - @event.schedule_recurrences.each do |recurrence|
            %div= recurrence.rule.to_s
  .col-md-4
    - @dated_occurrences.each do |date, occurrences|
      .card.card-body.mb-3
        %h3= date
        %ul
          - occurrences.each do |occurrence|
            %li
              = range_display(occurrence.starts_at, occurrence.ends_at)
              - if policy(@event).update?
                = button_to t('event_occurrences.remove'), team_event_event_occurrence_path(@team, @event, occurrence),
                            method: :delete, form: { class: 'd-inline' }, class: 'btn btn-sm link-danger'
